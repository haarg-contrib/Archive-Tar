name             = Archive-Tar-Wrapper
author           = Mike Schilli <cpan@perlmeister.com>
author           = Alceu Rodrigues de Freitas Junior <glasswalk3r@yahoo.com.br>
license          = GPL_3
copyright_holder = Mike Schilli

;;; Gather
[Git::GatherDir]
exclude_filename = Makefile.PL
exclude_filename = META.json
exclude_filename = LICENSE
exclude_filename = README.md

[GatherFile]
filename = .perlcriticrc

[Encoding]
encoding = bytes
matches = \.(tar(\.(gz|bz2))?|tgz)

;;; Metadata
[Git::Contributors]

[MetaProvides::Package]

[MetaResources]
bugtracker.web    = https://github.com/haarg/Archive-Tar-Wrapper/issues
repository.url    = https://github.com/haarg/Archive-Tar-Wrapper.git
repository.web    = https://github.com/haarg/Archive-Tar-Wrapper
repository.type   = git

[PrereqsFile]

[UseUnsafeInc]
dot_in_INC = 0

;;; Modification
[PodWeaver]
; authordep Pod::Weaver::Section::Contributors
; authordep Pod::Weaver::Plugin::StopWords

;;; Extra Files
[License]
[MetaJSON]
[MetaYAML]
[Manifest]
[Pod2Readme]

;;; Installer
[MakeMaker::Awesome]
delimiter = |
header = |if ( $^O eq 'MSWin32' ) {
header = |    require Win32;
header = |    require File::Which;
header = |    my $product_info = Win32::GetOSDisplayName();
header = |    my ( $osvername, $major, $minor, $id ) = Win32::GetOSVersion();
header = |    print "Running on $product_info - major=$major, minor=$minor, id=$id\n";
header = |
header = |    unless ( $major >= 6 ) {
header = |        warn
header = |"Too old Microsoft Windows to be supported, major version must be equal or higher 6.\n";
header = |        die "OS unsupported\n";
header = |    }
header = |
header = |    # double quoting is required on Windows if there are spaces in the path
header = |    my $tar_path = File::Which::which('bsdtar.exe');
header = |    $tar_path = File::Which::which('tar') unless ( defined($tar_path) );
header = |
header = |    unless ( defined($tar_path) ) {
header = |        warn "No tar program available, cannot work without it.\n";
header = |        die "OS unsupported\n";
header = |    }
header = |    else {
header = |        my $version_info = `"$tar_path" --version`;
header = |        print "Using $tar_path $version_info\n";
header = |
header = |        if ( $version_info =~ /GNU/ ) {
header = |            warn
header = |"Sorry, GNU tar is not supported on Microsoft Windows. Install a BSD tar or check your PATH configuration\n";
header = |            die "OS unsupported\n";
header = |        }
header = |    }
header = |}


;;; Release
[TestRelease]
[RunExtraTests]
[ConfirmRelease]
[UploadToCPAN]

[Git::Check]
[Git::Remote::Check]
branch = master
[@Git::VersionManager]
-remove = Prereqs
NextRelease.format = %-6v  %{yyyy-MM-dd}d%{ (TRIAL RELEASE)}T
[Git::Push]

;;; Tests
[MetaTests]
[MojibakeTests]
[PodCoverageTests]
[PodSyntaxTests]
[Test::CPAN::Changes]
[Substitute / RenameTestCPANChanges]
file = xt/release/cpan-changes.t
filename_code = s{release}{author};
code =
[Test::ChangesHasContent]
[Test::Compile]
[Test::EOL]
[Test::Kwalitee]
filename = xt/author/kwalitee.t
[Test::MinimumVersion]
[Test::NoTabs]
[Test::Perl::Critic]
critic_config = .perlcriticrc
[Test::PodSpelling]
[Test::Portability]
options = test_one_dot = 0
[Test::ReportPrereqs]
[Test::Version]

;;; Repo files
[CopyFilesFromRelease]
filename = Makefile.PL
filename = META.json
filename = LICENSE
[ReadmeAnyFromPod / ReadmeGFMInRoot]
phase = release

[Regenerate::AfterReleasers]
plugin = CopyFilesFromRelease
plugin = ReadmeGFMInRoot
